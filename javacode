public class TicTacToe {
    private static final int COMPUTER = 1;
    private static final int HUMAN = 2;
    private static final int SIDE = 3; 

    private static final char COMPUTERMOVE = 'O';
    private static final char HUMANMOVE = 'X';

    private char[][] board = new char[SIDE][SIDE];
    private int[] moves = new int[SIDE * SIDE];

    private void showBoard() {
        System.out.println("\n\t\t\t  " + board[0][0] + " | " + board[0][1] + " | " + board[0][2]);
        System.out.println("\t\t\t--------------");
        System.out.println("\t\t\t  " + board[1][0] + " | " + board[1][1] + " | " + board[1][2]);
        System.out.println("\t\t\t--------------");
        System.out.println("\t\t\t  " + board[2][0] + " | " + board[2][1] + " | " + board[2][2] + "\n");
    }

    private void showInstructions() {
        System.out.println("\t\t\t  Tic-Tac-Toe\n");
        System.out.println("Choose a cell numbered from 1 to 9 as below and play\n");
        System.out.println("\t\t\t  1 | 2 | 3");
        System.out.println("\t\t\t--------------");
        System.out.println("\t\t\t  4 | 5 | 6");
        System.out.println("\t\t\t--------------");
        System.out.println("\t\t\t  7 | 8 | 9\n");
        System.out.println("-\t-\t-\t-\t-\t-\t-\t-\t-\t-\n");
    }

    private void initialise() {
        for (int i = 0; i < SIDE; i++) {
            for (int j = 0; j < SIDE; j++)
                board[i][j] = ' ';
        }
        for (int i = 0; i < SIDE * SIDE; i++)
            moves[i] = i;
        java.util.Collections.shuffle(java.util.Arrays.asList(moves));
    }

    private void declareWinner(int whoseTurn) {
        if (whoseTurn == COMPUTER)
            System.out.println("COMPUTER has won");
        else
            System.out.println("HUMAN has won");
    }

    private boolean rowCrossed() {
        for (int i = 0; i < SIDE; i++) {
            if (board[i][0] == board[i][1] && board[i][1] == board[i][2] && board[i][0] != ' ')
                return true;
        }
        return false;
    }

    private boolean columnCrossed() {
        for (int i = 0; i < SIDE; i++) {
            if (board[0][i] == board[1][i] && board[1][i] == board[2][i] && board[0][i] != ' ')
                return true;
        }
        return false;
    }

    private boolean diagonalCrossed() {
        if (board[0][0] == board[1][1] && board[1][1] == board[2][2] && board[0][0] != ' ')
            return true;
        if (board[0][2] == board[1][1] && board[1][1] == board[2][0] && board[0][2] != ' ')
            return true;
        return false;
    }

=    private boolean gameOver() {
        return (rowCrossed() || columnCrossed() || diagonalCrossed());
    }

    public void playTicTacToe(int whoseTurn) {
        initialise();
        showInstructions();
        int moveIndex = 0, x, y;
        while (!gameOver() && moveIndex != SIDE * SIDE) {
            if (whoseTurn == COMPUTER) {
                x = moves[moveIndex] / SIDE;
                y = moves[moveIndex] % SIDE;
                board[x][y] = COMPUTERMOVE;
                System.out.println("COMPUTER has put a " + COMPUTERMOVE + " in cell " + (moves[moveIndex] + 1));
                showBoard();
                moveIndex++;
                whoseTurn = HUMAN;
            } else if (whoseTurn == HUMAN) {
                x = moves[moveIndex] / SIDE;
                y = moves[moveIndex] % SIDE;
                board[x][y] = HUMANMOVE;
                System.out.println("HUMAN has put a " + HUMANMOVE + " in cell " + (moves[moveIndex] + 1));
                showBoard();
                moveIndex++;
                whoseTurn = COMPUTER;
            }
        }
        if (!gameOver() && moveIndex == SIDE * SIDE)
            System.out.println("It's a draw");
        else {
            if (whoseTurn == COMPUTER)
                whoseTurn = HUMAN;
            else if (whoseTurn == HUMAN)
                whoseTurn = COMPUTER;
            declareWinner(whoseTurn);
        }
    }

    public static void main(String[] args) {
        TicTacToe game = new TicTacToe();
        game.playTicTacToe(COMPUTER);
  }
}
